(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// let age = prompt ("How old are you?");
// let message = (age<=11) ? "Baby": //ребенок
// 	(age<=17) ? "Teenager": //подросток
// 	(age<=59) ? "Adult": //взрослый
// 	(age>=60) ? "Retiree":
// "You entered the wrong age";
// alert (message);
//=====First
var ageField = document.querySelector('#i-age');
var check = document.querySelector('#submit-age');
var result = document.querySelector('#title');
check.addEventListener('click', function () {
  // e.preventDefault();
  var age = +ageField.value;

  if (age <= 11 && age > 0) {
    result.textContent = 'Вы ребенок';
  } else if (age <= 17) {
    result.textContent = 'Вы подросток';
  } else if (age <= 59) {
    result.textContent = 'Вы взрослый';
  } else if (age >= 60 && age < 120) {
    result.textContent = 'Вы пенсионер';
  } else {
    result.textContent = 'Вы, наверное, ввели не верное число';
  }
}); //=====Second

var numField = document.querySelector('#i-numb');
var check2 = document.querySelector('#submit-numb');
check2.addEventListener('click', function () {
  // e.preventDefault();
  var num = +numField.value;

  switch (num) {
    case 0:
      result.textContent = "Спец символ этой кнопки: )";
      break;

    case 1:
      result.textContent = "Спец символ этой кнопки: !";
      break;

    case 2:
      result.textContent = "Спец символ этой кнопки: @";
      break;

    case 3:
      result.textContent = "Спец символ этой кнопки: #";
      break;

    case 4:
      result.textContent = "Спец символ этой кнопки: $";
      break;

    case 5:
      result.textContent = "Спец символ этой кнопки: %";
      break;

    case 6:
      result.textContent = "Спец символ этой кнопки: ^";
      break;

    case 7:
      result.textContent = "Спец символ этой кнопки: &";
      break;

    case 8:
      result.textContent = "Спец символ этой кнопки: *";
      break;

    case 9:
      result.textContent = "Спец символ этой кнопки: (";
      break;

    default:
      result.textContent = "Не верные символ!";
      break;
  }

  numField.value = "";
}); //========Third

var numbsFeald = document.querySelector('#i-numbs');
var check3 = document.querySelector('#submit-numbs');
check3.addEventListener('click', function () {
  // e.preventDefault();
  var num = numbsFeald.value;

  if (num.length > 3 || num.length < 3) {
    result.textContent = 'Введите трех значное число';
  } else if (num[0] === num[2] || num[0] === num[1] || num[1] === num[2]) {
    result.textContent = 'Есть одинаковые числа';
  } else {
    result.textContent = 'Одинаковых чисел нет';
  }
}); // =============Fifth

var yearFeald = document.querySelector('#i-year');
var check4 = document.querySelector('#submit-year');
check4.addEventListener('click', function () {
  var year = +yearFeald.value;

  if (year % 400 == 0 || year % 4 == 0 && year % 100 !== 0) {
    result.textContent = 'Год высокосный';
  } else {
    result.textContent = 'Год Не высокосный';
  }
}); // ============6

var palindromFeald = document.querySelector('#i-palindrom');
var check5 = document.querySelector('#submit-palindrom');
check5.addEventListener('click', function () {
  var palindrom = palindromFeald.value;
  var reverse = palindrom.split('').reverse().join('');

  if (palindrom == reverse && palindrom.length == 5) {
    result.textContent = 'Число палиндром';
  } else if (palindrom != reverse && palindrom.length == 5) {
    result.textContent = 'Число не палиндром';
  } else {
    result.textContent = 'Вы ввели не верное число';
  }
}); //  ============= 7

var moneyFeald = document.querySelector('#i-money');
var convertEur = document.querySelector('#submit-eur');
var convertUan = document.querySelector('#submit-uan');
var convertAzn = document.querySelector('#submit-azn');
convertEur.addEventListener('click', function () {
  var eur = moneyFeald.value * 0.93;
  result.textContent = eur + ' EUR';
});
convertUan.addEventListener('click', function () {
  var uan = moneyFeald.value * 24.50;
  result.textContent = uan + ' UAN';
});
convertAzn.addEventListener('click', function () {
  var azn = moneyFeald.value * 1.7;
  result.textContent = azn + ' AZN';
}); //  ============= 8

var summFeald = document.querySelector('#i-summ');
var calculated = document.querySelector('#submit-summ');
calculated.addEventListener('click', function () {
  var discount = summFeald.value;

  if (discount < 200) {
    result.textContent = discount;
  } else if (discount >= 200 && discount < 300) {
    result.textContent = discount - discount * 3 / 100;
  } else if (discount >= 300 && discount < 500) {
    result.textContent = discount - discount * 5 / 100;
  } else {
    result.textContent = discount - discount * 7 / 100;
  }
}); //  ============= 9

var circleLength = document.querySelector('#i-circle');
var squarePerimetr = document.querySelector('#i-square');
var checkSize = document.querySelector('#submit-size');
checkSize.addEventListener('click', function () {
  var circleSize = circleLength.value / (3.14 * 2) * 2;
  var squareSize = squarePerimetr.value / 4;

  if (circleSize < squareSize) {
    result.textContent = 'Круг влезит в квадрат';
  } else {
    result.textContent = 'Круг НЕ влезит в квадрат';
  }
}); //  ============= 10

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
