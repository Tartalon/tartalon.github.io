(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// let age = prompt ("How old are you?");
// let message = (age<=11) ? "Baby": //ребенок
// 	(age<=17) ? "Teenager": //подросток
// 	(age<=59) ? "Adult": //взрослый
// 	(age>=60) ? "Retiree":
// "You entered the wrong age";
// alert (message);
//=====First
var ageField = document.querySelector('#i-age');
var check = document.querySelector('#submit-age');
var result = document.querySelector('#title');
check.addEventListener('click', function (e) {
  e.preventDefault();
  var age = +ageField.value;

  if (age <= 11 && age > 0) {
    result.textContent = 'Вы ребенок';
  } else if (age <= 17) {
    result.textContent = 'Вы подросток';
  } else if (age <= 59) {
    result.textContent = 'Вы взрослый';
  } else if (age >= 60 && age < 120) {
    result.textContent = 'Вы пенсионер';
  } else {
    result.textContent = 'Вы, наверное, ввели не верное число';
  }
}); //=====Second

var numField = document.querySelector('#i-numb');
var result2 = document.querySelector('#title');
var check2 = document.querySelector('#submit-numb');
check2.addEventListener('click', function (e) {
  e.preventDefault();
  var num = +numField.value;

  switch (num) {
    case 0:
      result2.textContent = "Спец символ этой кнопки: )";
      break;

    case 1:
      result2.textContent = "Спец символ этой кнопки: !";
      break;

    case 2:
      result2.textContent = "Спец символ этой кнопки: @";
      break;

    case 3:
      result2.textContent = "Спец символ этой кнопки: #";
      break;

    case 4:
      result2.textContent = "Спец символ этой кнопки: $";
      break;

    case 5:
      result2.textContent = "Спец символ этой кнопки: %";
      break;

    case 6:
      result2.textContent = "Спец символ этой кнопки: ^";
      break;

    case 7:
      result2.textContent = "Спец символ этой кнопки: &";
      break;

    case 8:
      result2.textContent = "Спец символ этой кнопки: *";
      break;

    case 9:
      result2.textContent = "Спец символ этой кнопки: (";
      break;

    default:
      result2.textContent = "Не верные символ!";
      break;
  }

  numField.value = "";
}); //========Third

var numbsFeald = document.querySelector('#i-numbs');
var check3 = document.querySelector('#submit-numbs');
var result3 = document.querySelector('#title');
check3.addEventListener('click', function (e) {
  e.preventDefault();
  var num = +numbsFeald.value;

  if (num.length > 3 || num.length < 3) {
    result3.textContent = 'Введите трех значное число';
  } else if (num[0] === num[2] || num[0] === num[1] || num[1] === num[2]) {
    result3.textContent = 'Есть одинаковые числа';
  } else {
    result3.textContent = 'Одинаковых чисел нет';
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
