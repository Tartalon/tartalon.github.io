(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// let age = prompt ("How old are you?");
// let message = (age<=11) ? "Baby": //ребенок
// 	(age<=17) ? "Teenager": //подросток
// 	(age<=59) ? "Adult": //взрослый
// 	(age>=60) ? "Retiree":
// "You entered the wrong age";
// alert (message);
//=====First
var ageField = document.querySelector('#i-age');
var check = document.querySelector('#submit-age');
var result = document.querySelector('#title');
check.addEventListener('click', function (e) {
  e.preventDefault();
  var age = +ageField.value;

  if (age <= 11 && age > 0) {
    result.textContent = 'Вы ребенок';
  } else if (age <= 17) {
    result.textContent = 'Вы подросток';
  } else if (age <= 59) {
    result.textContent = 'Вы взрослый';
  } else if (age >= 60 && age < 120) {
    result.textContent = 'Вы пенсионер';
  } else {
    result.textContent = 'Вы, наверное, вели не верное число';
  }
}); //=====Second

var num = document.querySelector('#i-numb');
var result2 = document.querySelector('#title');
num.addEventListener('click');

switch (+num) {
  case 0:
    alert(")");
    break;

  case 1:
    alert("!");
    break;

  case 2:
    alert("@");
    break;

  case 3:
    alert("#");
    break;

  case 4:
    alert("$");
    break;

  case 5:
    alert("%");
    break;

  case 6:
    alert("^");
    break;

  case 7:
    alert("&");
    break;

  case 8:
    alert("*");
    break;

  case 9:
    alert("(");
    break;

  default:
    alert("Wrong number!");
} // let age = +ageField.value;
// let test = (age <= 11) ? "Вы ребенок":
// 	(age <= 17) ? "Вы подросток":
// 	(age <= 59) ? "Вы взрослый":
// 	(age > 59 && age < 120) ? "Вы пенсионер":
// 	"Вы ввели неверный возраст";
// check.addEventListener('click', test);
// console.log(test);
// result.textContent = test;

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy8yM19kYXRhLXR5cGVzL3NyYy9qcy9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFFQSxJQUFJLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixRQUF2QixDQUFmO0FBQ0EsSUFBSSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBWjtBQUNBLElBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLFFBQXZCLENBQWI7QUFFQSxLQUFLLENBQUMsZ0JBQU4sQ0FBdUIsT0FBdkIsRUFBZ0MsVUFBUyxDQUFULEVBQVk7QUFFM0MsRUFBQSxDQUFDLENBQUMsY0FBRjtBQUNDLE1BQUksR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQXBCOztBQUVELE1BQUksR0FBRyxJQUFJLEVBQVAsSUFBYSxHQUFHLEdBQUcsQ0FBdkIsRUFBMEI7QUFDekIsSUFBQSxNQUFNLENBQUMsV0FBUCxHQUFxQixZQUFyQjtBQUNBLEdBRkQsTUFFTyxJQUFJLEdBQUcsSUFBSSxFQUFYLEVBQWU7QUFDckIsSUFBQSxNQUFNLENBQUMsV0FBUCxHQUFxQixjQUFyQjtBQUNBLEdBRk0sTUFFQSxJQUFJLEdBQUcsSUFBSSxFQUFYLEVBQWU7QUFDckIsSUFBQSxNQUFNLENBQUMsV0FBUCxHQUFvQixhQUFwQjtBQUNBLEdBRk0sTUFFQSxJQUFJLEdBQUcsSUFBSSxFQUFQLElBQWEsR0FBRyxHQUFHLEdBQXZCLEVBQTRCO0FBQ2xDLElBQUEsTUFBTSxDQUFDLFdBQVAsR0FBcUIsY0FBckI7QUFDQSxHQUZNLE1BRUE7QUFDTixJQUFBLE1BQU0sQ0FBQyxXQUFQLEdBQXFCLG9DQUFyQjtBQUNBO0FBQ0QsQ0FoQkQsRSxDQW9CQTs7QUFFQSxJQUFJLEdBQUcsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixTQUF2QixDQUFWO0FBQ0EsSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBZDtBQUVBLEdBQUcsQ0FBQyxnQkFBSixDQUFxQixPQUFyQjs7QUFDQSxRQUFRLENBQUMsR0FBVDtBQUNDLE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNELE9BQUssQ0FBTDtBQUNDLElBQUEsS0FBSyxDQUFFLEdBQUYsQ0FBTDtBQUNBOztBQUNEO0FBQ0MsSUFBQSxLQUFLLENBQUUsZUFBRixDQUFMO0FBaENGLEMsQ0FtQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvLyBsZXQgYWdlID0gcHJvbXB0IChcIkhvdyBvbGQgYXJlIHlvdT9cIik7XG4vLyBsZXQgbWVzc2FnZSA9IChhZ2U8PTExKSA/IFwiQmFieVwiOiAvL9GA0LXQsdC10L3QvtC6XG4vLyBcdChhZ2U8PTE3KSA/IFwiVGVlbmFnZXJcIjogLy/Qv9C+0LTRgNC+0YHRgtC+0Lpcbi8vIFx0KGFnZTw9NTkpID8gXCJBZHVsdFwiOiAvL9Cy0LfRgNC+0YHQu9GL0Llcbi8vIFx0KGFnZT49NjApID8gXCJSZXRpcmVlXCI6XG4vLyBcIllvdSBlbnRlcmVkIHRoZSB3cm9uZyBhZ2VcIjtcbi8vIGFsZXJ0IChtZXNzYWdlKTtcblxuXG5cbi8vPT09PT1GaXJzdFxuXG5sZXQgYWdlRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaS1hZ2UnKTtcbmxldCBjaGVjayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQtYWdlJyk7XG5sZXQgcmVzdWx0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpdGxlJyk7XG5cbmNoZWNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuXG5cdGUucHJldmVudERlZmF1bHQoKTtcbiBcdGxldCBhZ2UgPSArYWdlRmllbGQudmFsdWU7XG5cblx0aWYgKGFnZSA8PSAxMSAmJiBhZ2UgPiAwKSB7XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gJ9CS0Ysg0YDQtdCx0LXQvdC+0LonO1xuXHR9IGVsc2UgaWYgKGFnZSA8PSAxNykge1xuXHRcdHJlc3VsdC50ZXh0Q29udGVudCA9ICfQktGLINC/0L7QtNGA0L7RgdGC0L7Quic7XG5cdH0gZWxzZSBpZiAoYWdlIDw9IDU5KSB7XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0n0JLRiyDQstC30YDQvtGB0LvRi9C5Jztcblx0fSBlbHNlIGlmIChhZ2UgPj0gNjAgJiYgYWdlIDwgMTIwKSB7XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gJ9CS0Ysg0L/QtdC90YHQuNC+0L3QtdGAJztcblx0fSBlbHNlIHtcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSAn0JLRiywg0L3QsNCy0LXRgNC90L7QtSwg0LLQtdC70Lgg0L3QtSDQstC10YDQvdC+0LUg0YfQuNGB0LvQvic7XG5cdH1cbn0pO1xuXG5cblxuLy89PT09PVNlY29uZFxuXG5sZXQgbnVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ktbnVtYicpO1xubGV0IHJlc3VsdDIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGl0bGUnKTtcblxubnVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJylcbnN3aXRjaCAoK251bSkge1xuXHRjYXNlIDA6XG5cdFx0YWxlcnQgKFwiKVwiKTtcblx0XHRicmVhaztcblx0Y2FzZSAxOlxuXHRcdGFsZXJ0IChcIiFcIik7XG5cdFx0YnJlYWs7XG5cdGNhc2UgMjpcblx0XHRhbGVydCAoXCJAXCIpO1xuXHRcdGJyZWFrO1xuXHRjYXNlIDM6XG5cdFx0YWxlcnQgKFwiI1wiKTtcblx0XHRicmVhaztcblx0Y2FzZSA0OlxuXHRcdGFsZXJ0IChcIiRcIik7XG5cdFx0YnJlYWs7XG5cdGNhc2UgNTpcblx0XHRhbGVydCAoXCIlXCIpO1xuXHRcdGJyZWFrO1xuXHRjYXNlIDY6XG5cdFx0YWxlcnQgKFwiXlwiKTtcblx0XHRicmVhaztcblx0Y2FzZSA3OlxuXHRcdGFsZXJ0IChcIiZcIik7XG5cdFx0YnJlYWs7XG5cdGNhc2UgODpcblx0XHRhbGVydCAoXCIqXCIpO1xuXHRcdGJyZWFrO1xuXHRjYXNlIDk6XG5cdFx0YWxlcnQgKFwiKFwiKTtcblx0XHRicmVhaztcblx0ZGVmYXVsdDpcblx0XHRhbGVydCAoXCJXcm9uZyBudW1iZXIhXCIpO1xufVxuXG4vLyBsZXQgYWdlID0gK2FnZUZpZWxkLnZhbHVlO1xuXG4vLyBsZXQgdGVzdCA9IChhZ2UgPD0gMTEpID8gXCLQktGLINGA0LXQsdC10L3QvtC6XCI6XG4vLyBcdChhZ2UgPD0gMTcpID8gXCLQktGLINC/0L7QtNGA0L7RgdGC0L7QulwiOlxuLy8gXHQoYWdlIDw9IDU5KSA/IFwi0JLRiyDQstC30YDQvtGB0LvRi9C5XCI6XG4vLyBcdChhZ2UgPiA1OSAmJiBhZ2UgPCAxMjApID8gXCLQktGLINC/0LXQvdGB0LjQvtC90LXRgFwiOlxuLy8gXHRcItCS0Ysg0LLQstC10LvQuCDQvdC10LLQtdGA0L3Ri9C5INCy0L7Qt9GA0LDRgdGCXCI7XG5cbi8vIGNoZWNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGVzdCk7XG4vLyBjb25zb2xlLmxvZyh0ZXN0KTtcblxuLy8gcmVzdWx0LnRleHRDb250ZW50ID0gdGVzdDtcbiJdLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKd2NtOXFaV04wY3k4eU0xOWtZWFJoTFhSNWNHVnpMM055WXk5cWN5OWhjSEF1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdPenRCUTBGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCU1VFN1FVRkZRU3hKUVVGSkxGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCVkN4RFFVRjFRaXhSUVVGMlFpeERRVUZtTzBGQlEwRXNTVUZCU1N4TFFVRkxMRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRVlFzUTBGQmRVSXNZVUZCZGtJc1EwRkJXanRCUVVOQkxFbEJRVWtzVFVGQlRTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xGRkJRWFpDTEVOQlFXSTdRVUZGUVN4TFFVRkxMRU5CUVVNc1owSkJRVTRzUTBGQmRVSXNUMEZCZGtJc1JVRkJaME1zVlVGQlV5eERRVUZVTEVWQlFWazdRVUZGTTBNc1JVRkJRU3hEUVVGRExFTkJRVU1zWTBGQlJqdEJRVU5ETEUxQlFVa3NSMEZCUnl4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExFdEJRWEJDT3p0QlFVVkVMRTFCUVVrc1IwRkJSeXhKUVVGSkxFVkJRVkFzU1VGQllTeEhRVUZITEVkQlFVY3NRMEZCZGtJc1JVRkJNRUk3UVVGRGVrSXNTVUZCUVN4TlFVRk5MRU5CUVVNc1YwRkJVQ3hIUVVGeFFpeFpRVUZ5UWp0QlFVTkJMRWRCUmtRc1RVRkZUeXhKUVVGSkxFZEJRVWNzU1VGQlNTeEZRVUZZTEVWQlFXVTdRVUZEY2tJc1NVRkJRU3hOUVVGTkxFTkJRVU1zVjBGQlVDeEhRVUZ4UWl4alFVRnlRanRCUVVOQkxFZEJSazBzVFVGRlFTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RlFVRllMRVZCUVdVN1FVRkRja0lzU1VGQlFTeE5RVUZOTEVOQlFVTXNWMEZCVUN4SFFVRnZRaXhoUVVGd1FqdEJRVU5CTEVkQlJrMHNUVUZGUVN4SlFVRkpMRWRCUVVjc1NVRkJTU3hGUVVGUUxFbEJRV0VzUjBGQlJ5eEhRVUZITEVkQlFYWkNMRVZCUVRSQ08wRkJRMnhETEVsQlFVRXNUVUZCVFN4RFFVRkRMRmRCUVZBc1IwRkJjVUlzWTBGQmNrSTdRVUZEUVN4SFFVWk5MRTFCUlVFN1FVRkRUaXhKUVVGQkxFMUJRVTBzUTBGQlF5eFhRVUZRTEVkQlFYRkNMRzlEUVVGeVFqdEJRVU5CTzBGQlEwUXNRMEZvUWtRc1JTeERRVzlDUVRzN1FVRkZRU3hKUVVGSkxFZEJRVWNzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCVkN4RFFVRjFRaXhUUVVGMlFpeERRVUZXTzBGQlEwRXNTVUZCU1N4UFFVRlBMRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRVlFzUTBGQmRVSXNVVUZCZGtJc1EwRkJaRHRCUVVWQkxFZEJRVWNzUTBGQlF5eG5Ra0ZCU2l4RFFVRnhRaXhQUVVGeVFqczdRVUZEUVN4UlFVRlJMRU5CUVVNc1IwRkJWRHRCUVVORExFOUJRVXNzUTBGQlREdEJRVU5ETEVsQlFVRXNTMEZCU3l4RFFVRkZMRWRCUVVZc1EwRkJURHRCUVVOQk96dEJRVU5FTEU5QlFVc3NRMEZCVER0QlFVTkRMRWxCUVVFc1MwRkJTeXhEUVVGRkxFZEJRVVlzUTBGQlREdEJRVU5CT3p0QlFVTkVMRTlCUVVzc1EwRkJURHRCUVVORExFbEJRVUVzUzBGQlN5eERRVUZGTEVkQlFVWXNRMEZCVER0QlFVTkJPenRCUVVORUxFOUJRVXNzUTBGQlREdEJRVU5ETEVsQlFVRXNTMEZCU3l4RFFVRkZMRWRCUVVZc1EwRkJURHRCUVVOQk96dEJRVU5FTEU5QlFVc3NRMEZCVER0QlFVTkRMRWxCUVVFc1MwRkJTeXhEUVVGRkxFZEJRVVlzUTBGQlREdEJRVU5CT3p0QlFVTkVMRTlCUVVzc1EwRkJURHRCUVVORExFbEJRVUVzUzBGQlN5eERRVUZGTEVkQlFVWXNRMEZCVER0QlFVTkJPenRCUVVORUxFOUJRVXNzUTBGQlREdEJRVU5ETEVsQlFVRXNTMEZCU3l4RFFVRkZMRWRCUVVZc1EwRkJURHRCUVVOQk96dEJRVU5FTEU5QlFVc3NRMEZCVER0QlFVTkRMRWxCUVVFc1MwRkJTeXhEUVVGRkxFZEJRVVlzUTBGQlREdEJRVU5CT3p0QlFVTkVMRTlCUVVzc1EwRkJURHRCUVVORExFbEJRVUVzUzBGQlN5eERRVUZGTEVkQlFVWXNRMEZCVER0QlFVTkJPenRCUVVORUxFOUJRVXNzUTBGQlREdEJRVU5ETEVsQlFVRXNTMEZCU3l4RFFVRkZMRWRCUVVZc1EwRkJURHRCUVVOQk96dEJRVU5FTzBGQlEwTXNTVUZCUVN4TFFVRkxMRU5CUVVVc1pVRkJSaXhEUVVGTU8wRkJhRU5HTEVNc1EwRnRRMEU3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUlVFN1FVRkRRVHRCUVVWQklpd2labWxzWlNJNkltZGxibVZ5WVhSbFpDNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUlvWm5WdVkzUnBiMjRvS1h0bWRXNWpkR2x2YmlCeUtHVXNiaXgwS1h0bWRXNWpkR2x2YmlCdktHa3NaaWw3YVdZb0lXNWJhVjBwZTJsbUtDRmxXMmxkS1h0MllYSWdZejFjSW1aMWJtTjBhVzl1WENJOVBYUjVjR1Z2WmlCeVpYRjFhWEpsSmlaeVpYRjFhWEpsTzJsbUtDRm1KaVpqS1hKbGRIVnliaUJqS0drc0lUQXBPMmxtS0hVcGNtVjBkWEp1SUhVb2FTd2hNQ2s3ZG1GeUlHRTlibVYzSUVWeWNtOXlLRndpUTJGdWJtOTBJR1pwYm1RZ2JXOWtkV3hsSUNkY0lpdHBLMXdpSjF3aUtUdDBhSEp2ZHlCaExtTnZaR1U5WENKTlQwUlZURVZmVGs5VVgwWlBWVTVFWENJc1lYMTJZWElnY0QxdVcybGRQWHRsZUhCdmNuUnpPbnQ5ZlR0bFcybGRXekJkTG1OaGJHd29jQzVsZUhCdmNuUnpMR1oxYm1OMGFXOXVLSElwZTNaaGNpQnVQV1ZiYVYxYk1WMWJjbDA3Y21WMGRYSnVJRzhvYm54OGNpbDlMSEFzY0M1bGVIQnZjblJ6TEhJc1pTeHVMSFFwZlhKbGRIVnliaUJ1VzJsZExtVjRjRzl5ZEhOOVptOXlLSFpoY2lCMVBWd2lablZ1WTNScGIyNWNJajA5ZEhsd1pXOW1JSEpsY1hWcGNtVW1KbkpsY1hWcGNtVXNhVDB3TzJrOGRDNXNaVzVuZEdnN2FTc3JLVzhvZEZ0cFhTazdjbVYwZFhKdUlHOTljbVYwZFhKdUlISjlLU2dwSWl3aUx5OGdiR1YwSUdGblpTQTlJSEJ5YjIxd2RDQW9YQ0pJYjNjZ2IyeGtJR0Z5WlNCNWIzVS9YQ0lwTzF4dUx5OGdiR1YwSUcxbGMzTmhaMlVnUFNBb1lXZGxQRDB4TVNrZ1B5QmNJa0poWW5sY0lqb2dMeS9SZ05DMTBMSFF0ZEM5MEw3UXVseHVMeThnWEhRb1lXZGxQRDB4TnlrZ1B5QmNJbFJsWlc1aFoyVnlYQ0k2SUM4djBML1F2dEMwMFlEUXZ0R0IwWUxRdnRDNlhHNHZMeUJjZENoaFoyVThQVFU1S1NBL0lGd2lRV1IxYkhSY0lqb2dMeS9Rc3RDMzBZRFF2dEdCMEx2Umk5QzVYRzR2THlCY2RDaGhaMlUrUFRZd0tTQS9JRndpVW1WMGFYSmxaVndpT2x4dUx5OGdYQ0paYjNVZ1pXNTBaWEpsWkNCMGFHVWdkM0p2Ym1jZ1lXZGxYQ0k3WEc0dkx5QmhiR1Z5ZENBb2JXVnpjMkZuWlNrN1hHNWNibHh1WEc0dkx6MDlQVDA5Um1seWMzUmNibHh1YkdWMElHRm5aVVpwWld4a0lEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkkya3RZV2RsSnlrN1hHNXNaWFFnWTJobFkyc2dQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY2pjM1ZpYldsMExXRm5aU2NwTzF4dWJHVjBJSEpsYzNWc2RDQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5TjBhWFJzWlNjcE8xeHVYRzVqYUdWamF5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZGpiR2xqYXljc0lHWjFibU4wYVc5dUtHVXBJSHRjYmx4dVhIUmxMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYRzRnWEhSc1pYUWdZV2RsSUQwZ0syRm5aVVpwWld4a0xuWmhiSFZsTzF4dVhHNWNkR2xtSUNoaFoyVWdQRDBnTVRFZ0ppWWdZV2RsSUQ0Z01Da2dlMXh1WEhSY2RISmxjM1ZzZEM1MFpYaDBRMjl1ZEdWdWRDQTlJQ2ZRa3RHTElOR0EwTFhRc2RDMTBMM1F2dEM2Snp0Y2JseDBmU0JsYkhObElHbG1JQ2hoWjJVZ1BEMGdNVGNwSUh0Y2JseDBYSFJ5WlhOMWJIUXVkR1Y0ZEVOdmJuUmxiblFnUFNBbjBKTFJpeURRdjlDKzBMVFJnTkMrMFlIUmd0QyswTG9uTzF4dVhIUjlJR1ZzYzJVZ2FXWWdLR0ZuWlNBOFBTQTFPU2tnZTF4dVhIUmNkSEpsYzNWc2RDNTBaWGgwUTI5dWRHVnVkQ0E5SjlDUzBZc2cwTExRdDlHQTBMN1JnZEM3MFl2UXVTYzdYRzVjZEgwZ1pXeHpaU0JwWmlBb1lXZGxJRDQ5SURZd0lDWW1JR0ZuWlNBOElERXlNQ2tnZTF4dVhIUmNkSEpsYzNWc2RDNTBaWGgwUTI5dWRHVnVkQ0E5SUNmUWt0R0xJTkMvMExYUXZkR0IwTGpRdnRDOTBMWFJnQ2M3WEc1Y2RIMGdaV3h6WlNCN1hHNWNkRngwY21WemRXeDBMblJsZUhSRGIyNTBaVzUwSUQwZ0o5Q1MwWXNzSU5DOTBMRFFzdEMxMFlEUXZkQyswTFVzSU5DeTBMWFF1OUM0SU5DOTBMVWcwTExRdGRHQTBMM1F2dEMxSU5HSDBMalJnZEM3MEw0bk8xeHVYSFI5WEc1OUtUdGNibHh1WEc1Y2JpOHZQVDA5UFQxVFpXTnZibVJjYmx4dWJHVjBJRzUxYlNBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSnlOcExXNTFiV0luS1R0Y2JteGxkQ0J5WlhOMWJIUXlJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25JM1JwZEd4bEp5azdYRzVjYm01MWJTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZGpiR2xqYXljcFhHNXpkMmwwWTJnZ0tDdHVkVzBwSUh0Y2JseDBZMkZ6WlNBd09seHVYSFJjZEdGc1pYSjBJQ2hjSWlsY0lpazdYRzVjZEZ4MFluSmxZV3M3WEc1Y2RHTmhjMlVnTVRwY2JseDBYSFJoYkdWeWRDQW9YQ0loWENJcE8xeHVYSFJjZEdKeVpXRnJPMXh1WEhSallYTmxJREk2WEc1Y2RGeDBZV3hsY25RZ0tGd2lRRndpS1R0Y2JseDBYSFJpY21WaGF6dGNibHgwWTJGelpTQXpPbHh1WEhSY2RHRnNaWEowSUNoY0lpTmNJaWs3WEc1Y2RGeDBZbkpsWVdzN1hHNWNkR05oYzJVZ05EcGNibHgwWEhSaGJHVnlkQ0FvWENJa1hDSXBPMXh1WEhSY2RHSnlaV0ZyTzF4dVhIUmpZWE5sSURVNlhHNWNkRngwWVd4bGNuUWdLRndpSlZ3aUtUdGNibHgwWEhSaWNtVmhhenRjYmx4MFkyRnpaU0EyT2x4dVhIUmNkR0ZzWlhKMElDaGNJbDVjSWlrN1hHNWNkRngwWW5KbFlXczdYRzVjZEdOaGMyVWdOenBjYmx4MFhIUmhiR1Z5ZENBb1hDSW1YQ0lwTzF4dVhIUmNkR0p5WldGck8xeHVYSFJqWVhObElEZzZYRzVjZEZ4MFlXeGxjblFnS0Z3aUtsd2lLVHRjYmx4MFhIUmljbVZoYXp0Y2JseDBZMkZ6WlNBNU9seHVYSFJjZEdGc1pYSjBJQ2hjSWloY0lpazdYRzVjZEZ4MFluSmxZV3M3WEc1Y2RHUmxabUYxYkhRNlhHNWNkRngwWVd4bGNuUWdLRndpVjNKdmJtY2diblZ0WW1WeUlWd2lLVHRjYm4xY2JseHVMeThnYkdWMElHRm5aU0E5SUN0aFoyVkdhV1ZzWkM1MllXeDFaVHRjYmx4dUx5OGdiR1YwSUhSbGMzUWdQU0FvWVdkbElEdzlJREV4S1NBL0lGd2kwSkxSaXlEUmdOQzEwTEhRdGRDOTBMN1F1bHdpT2x4dUx5OGdYSFFvWVdkbElEdzlJREUzS1NBL0lGd2kwSkxSaXlEUXY5QyswTFRSZ05DKzBZSFJndEMrMExwY0lqcGNiaTh2SUZ4MEtHRm5aU0E4UFNBMU9Ta2dQeUJjSXRDUzBZc2cwTExRdDlHQTBMN1JnZEM3MFl2UXVWd2lPbHh1THk4Z1hIUW9ZV2RsSUQ0Z05Ua2dKaVlnWVdkbElEd2dNVEl3S1NBL0lGd2kwSkxSaXlEUXY5QzEwTDNSZ2RDNDBMN1F2ZEMxMFlCY0lqcGNiaTh2SUZ4MFhDTFFrdEdMSU5DeTBMTFF0ZEM3MExnZzBMM1F0ZEN5MExYUmdOQzkwWXZRdVNEUXN0QyswTGZSZ05DdzBZSFJnbHdpTzF4dVhHNHZMeUJqYUdWamF5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZGpiR2xqYXljc0lIUmxjM1FwTzF4dUx5OGdZMjl1YzI5c1pTNXNiMmNvZEdWemRDazdYRzVjYmk4dklISmxjM1ZzZEM1MFpYaDBRMjl1ZEdWdWRDQTlJSFJsYzNRN1hHNGlYWDA9In0=
