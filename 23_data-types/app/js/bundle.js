(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// let age = prompt ("How old are you?");
// let message = (age<=11) ? "Baby": //ребенок
// 	(age<=17) ? "Teenager": //подросток
// 	(age<=59) ? "Adult": //взрослый
// 	(age>=60) ? "Retiree":
// "You entered the wrong age";
// alert (message);
//=====First
var ageField = document.querySelector('#i-age');
var check = document.querySelector('#submit-age');
var result = document.querySelector('#title');
check.addEventListener('click', function () {
  // e.preventDefault();
  var age = +ageField.value;

  if (age <= 11 && age > 0) {
    result.textContent = 'Вы ребенок';
  } else if (age <= 17) {
    result.textContent = 'Вы подросток';
  } else if (age <= 59) {
    result.textContent = 'Вы взрослый';
  } else if (age >= 60 && age < 120) {
    result.textContent = 'Вы пенсионер';
  } else {
    result.textContent = 'Вы, наверное, ввели не верное число';
  }
}); //=====Second

var numField = document.querySelector('#i-numb');
var check2 = document.querySelector('#submit-numb');
check2.addEventListener('click', function () {
  // e.preventDefault();
  var num = +numField.value;

  switch (num) {
    case 0:
      result.textContent = "Спец символ этой кнопки: )";
      break;

    case 1:
      result.textContent = "Спец символ этой кнопки: !";
      break;

    case 2:
      result.textContent = "Спец символ этой кнопки: @";
      break;

    case 3:
      result.textContent = "Спец символ этой кнопки: #";
      break;

    case 4:
      result.textContent = "Спец символ этой кнопки: $";
      break;

    case 5:
      result.textContent = "Спец символ этой кнопки: %";
      break;

    case 6:
      result.textContent = "Спец символ этой кнопки: ^";
      break;

    case 7:
      result.textContent = "Спец символ этой кнопки: &";
      break;

    case 8:
      result.textContent = "Спец символ этой кнопки: *";
      break;

    case 9:
      result.textContent = "Спец символ этой кнопки: (";
      break;

    default:
      result.textContent = "Не верные символ!";
      break;
  }

  numField.value = "";
}); //========Third

var numbsFeald = document.querySelector('#i-numbs');
var check3 = document.querySelector('#submit-numbs');
check3.addEventListener('click', function () {
  // e.preventDefault();
  var num = numbsFeald.value;

  if (num.length > 3 || num.length < 3) {
    result.textContent = 'Введите трех значное число';
  } else if (num[0] === num[2] || num[0] === num[1] || num[1] === num[2]) {
    result.textContent = 'Есть одинаковые числа';
  } else {
    result.textContent = 'Одинаковых чисел нет';
  }
}); // =============Fifth

var yearFeald = document.querySelector('#i-year');
var check4 = document.querySelector('#submit-year');
check4.addEventListener('click', function () {
  var year = +yearFeald.value;

  if (year % 400 == 0 || year % 4 == 0 && year % 100 !== 0) {
    result.textContent = 'Год высокосный';
  } else {
    result.textContent = 'Год Не высокосный';
  }
}); // ============6

var palindromFeald = document.querySelector('#i-palindrom');
var check5 = document.querySelector('#submit-palindrom');
check5.addEventListener('click', function () {
  var palindrom = palindromFeald.value;
  var reverse = palindrom.split('').reverse().join('');

  if (palindrom == reverse && palindrom.length == 5) {
    result.textContent = 'Число палиндром';
  } else if (palindrom != reverse && palindrom.length == 5) {
    result.textContent = 'Число не палиндром';
  } else {
    result.textContent = 'Вы ввели не верное число';
  }
}); //  ============= 7

var moneyFeald = document.querySelector('#i-money');
var convertEur = document.querySelector('#submit-eur');
var convertUan = document.querySelector('#submit-uan');
var convertAzn = document.querySelector('#submit-azn');
convertEur.addEventListener('click', function () {
  var eur = moneyFeald.value * 0.93;
  result.textContent = eur + ' EUR';
});
convertUan.addEventListener('click', function () {
  var uan = moneyFeald.value * 24.50;
  result.textContent = uan + ' UAN';
});
convertAzn.addEventListener('click', function () {
  var azn = moneyFeald.value * 1.7;
  result.textContent = azn + ' AZN';
}); //  ============= 8

var summFeald = document.querySelector('#i-money');
var calculated = document.querySelector('#submit-money');
calculated.addEventListener('click', function () {
  var discount = summFeald.value;

  if (discount < 200) {
    result.textCcontent = discount;
  } else if (discount >= 200 && discount < 300) {
    result.textContent = discount - discount * 3 / 100;
  } else if (discount >= 300 && discount < 500) {
    result.textContent = discount - discount * 5 / 100;
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy8yM19kYXRhLXR5cGVzL3NyYy9qcy9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFJQSxJQUFJLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixRQUF2QixDQUFmO0FBQ0EsSUFBSSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBWjtBQUNBLElBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLFFBQXZCLENBQWI7QUFFQSxLQUFLLENBQUMsZ0JBQU4sQ0FBd0IsT0FBeEIsRUFBaUMsWUFBVztBQUUzQztBQUNDLE1BQUksR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQXBCOztBQUVDLE1BQUksR0FBRyxJQUFJLEVBQVAsSUFBYSxHQUFHLEdBQUcsQ0FBdkIsRUFBMEI7QUFDeEIsSUFBQSxNQUFNLENBQUMsV0FBUCxHQUFxQixZQUFyQjtBQUNELEdBRkQsTUFFTyxJQUFJLEdBQUcsSUFBSSxFQUFYLEVBQWU7QUFDcEIsSUFBQSxNQUFNLENBQUMsV0FBUCxHQUFxQixjQUFyQjtBQUNELEdBRk0sTUFFQSxJQUFJLEdBQUcsSUFBSSxFQUFYLEVBQWU7QUFDcEIsSUFBQSxNQUFNLENBQUMsV0FBUCxHQUFxQixhQUFyQjtBQUNELEdBRk0sTUFFQSxJQUFJLEdBQUcsSUFBSSxFQUFQLElBQWEsR0FBRyxHQUFHLEdBQXZCLEVBQTRCO0FBQ2pDLElBQUEsTUFBTSxDQUFDLFdBQVAsR0FBcUIsY0FBckI7QUFDRCxHQUZNLE1BRUE7QUFDTCxJQUFBLE1BQU0sQ0FBQyxXQUFQLEdBQXFCLHFDQUFyQjtBQUNEO0FBQ0YsQ0FoQkYsRSxDQW9CQTs7QUFHQSxJQUFJLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixTQUF2QixDQUFmO0FB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R0FBRyxDQUFYLEdBQWUsR0FBaEQ7QUFDQTtBQUNELENBVkQiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIi8vIGxldCBhZ2UgPSBwcm9tcHQgKFwiSG93IG9sZCBhcmUgeW91P1wiKTtcbi8vIGxldCBtZXNzYWdlID0gKGFnZTw9MTEpID8gXCJCYWJ5XCI6IC8v0YDQtdCx0LXQvdC+0Lpcbi8vIFx0KGFnZTw9MTcpID8gXCJUZWVuYWdlclwiOiAvL9C/0L7QtNGA0L7RgdGC0L7QulxuLy8gXHQoYWdlPD01OSkgPyBcIkFkdWx0XCI6IC8v0LLQt9GA0L7RgdC70YvQuVxuLy8gXHQoYWdlPj02MCkgPyBcIlJldGlyZWVcIjpcbi8vIFwiWW91IGVudGVyZWQgdGhlIHdyb25nIGFnZVwiO1xuLy8gYWxlcnQgKG1lc3NhZ2UpO1xuXG5cblxuLy89PT09PUZpcnN0XG5cblxuXG5sZXQgYWdlRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaS1hZ2UnKTtcbmxldCBjaGVjayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQtYWdlJyk7XG5sZXQgcmVzdWx0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpdGxlJyk7XG5cbmNoZWNrLmFkZEV2ZW50TGlzdGVuZXIgKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXG5cdC8vIGUucHJldmVudERlZmF1bHQoKTtcblx0XHRsZXQgYWdlID0gK2FnZUZpZWxkLnZhbHVlO1xuXG4gICBpZiAoYWdlIDw9IDExICYmIGFnZSA+IDApIHtcbiAgICBcdHJlc3VsdC50ZXh0Q29udGVudCA9ICfQktGLINGA0LXQsdC10L3QvtC6JztcbiAgIH0gZWxzZSBpZiAoYWdlIDw9IDE3KSB7XG4gICAgXHRyZXN1bHQudGV4dENvbnRlbnQgPSAn0JLRiyDQv9C+0LTRgNC+0YHRgtC+0LonO1xuICAgfSBlbHNlIGlmIChhZ2UgPD0gNTkpIHtcbiAgICBcdHJlc3VsdC50ZXh0Q29udGVudCA9ICfQktGLINCy0LfRgNC+0YHQu9GL0LknO1xuICAgfSBlbHNlIGlmIChhZ2UgPj0gNjAgJiYgYWdlIDwgMTIwKSB7XG4gICBcdFx0cmVzdWx0LnRleHRDb250ZW50ID0gJ9CS0Ysg0L/QtdC90YHQuNC+0L3QtdGAJztcbiAgIH0gZWxzZSB7XG4gICAgXHRyZXN1bHQudGV4dENvbnRlbnQgPSAn0JLRiywg0L3QsNCy0LXRgNC90L7QtSwg0LLQstC10LvQuCDQvdC1INCy0LXRgNC90L7QtSDRh9C40YHQu9C+JztcbiAgIH1cbiB9KTtcblxuXG5cbi8vPT09PT1TZWNvbmRcblxuXG5sZXQgbnVtRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaS1udW1iJyk7XG5sZXQgY2hlY2syID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3N1Ym1pdC1udW1iJyk7XG5cbmNoZWNrMi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXG5cdC8vIGUucHJldmVudERlZmF1bHQoKTtcblx0XHRsZXQgbnVtID0gK251bUZpZWxkLnZhbHVlO1xuXG5zd2l0Y2ggKG51bSkge1xuXHRjYXNlIDA6XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gXCLQodC/0LXRhiDRgdC40LzQstC+0Lsg0Y3RgtC+0Lkg0LrQvdC+0L/QutC4OiApXCI7XG5cdFx0YnJlYWs7XG5cdGNhc2UgMTpcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSBcItCh0L/QtdGGINGB0LjQvNCy0L7QuyDRjdGC0L7QuSDQutC90L7Qv9C60Lg6ICFcIjtcblx0XHRicmVhaztcblx0Y2FzZSAyOlxuXHRcdHJlc3VsdC50ZXh0Q29udGVudCA9IFwi0KHQv9C10YYg0YHQuNC80LLQvtC7INGN0YLQvtC5INC60L3QvtC/0LrQuDogQFwiO1xuXHRcdGJyZWFrO1xuXHRjYXNlIDM6XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gXCLQodC/0LXRhiDRgdC40LzQstC+0Lsg0Y3RgtC+0Lkg0LrQvdC+0L/QutC4OiAjXCI7XG5cdFx0YnJlYWs7XG5cdGNhc2UgNDpcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSBcItCh0L/QtdGGINGB0LjQvNCy0L7QuyDRjdGC0L7QuSDQutC90L7Qv9C60Lg6ICRcIjtcblx0XHRicmVhaztcblx0Y2FzZSA1OlxuXHRcdHJlc3VsdC50ZXh0Q29udGVudCA9IFwi0KHQv9C10YYg0YHQuNC80LLQvtC7INGN0YLQvtC5INC60L3QvtC/0LrQuDogJVwiO1xuXHRcdGJyZWFrO1xuXHRjYXNlIDY6XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gXCLQodC/0LXRhiDRgdC40LzQstC+0Lsg0Y3RgtC+0Lkg0LrQvdC+0L/QutC4OiBeXCI7XG5cdFx0YnJlYWs7XG5cdGNhc2UgNzpcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSBcItCh0L/QtdGGINGB0LjQvNCy0L7QuyDRjdGC0L7QuSDQutC90L7Qv9C60Lg6ICZcIjtcblx0XHRicmVhaztcblx0Y2FzZSA4OlxuXHRcdHJlc3VsdC50ZXh0Q29udGVudCA9IFwi0KHQv9C10YYg0YHQuNC80LLQvtC7INGN0YLQvtC5INC60L3QvtC/0LrQuDogKlwiO1xuXHRcdGJyZWFrO1xuXHRjYXNlIDk6XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gXCLQodC/0LXRhiDRgdC40LzQstC+0Lsg0Y3RgtC+0Lkg0LrQvdC+0L/QutC4OiAoXCI7XG5cdFx0YnJlYWs7XG5cdGRlZmF1bHQ6XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gXCLQndC1INCy0LXRgNC90YvQtSDRgdC40LzQstC+0LshXCJcblx0YnJlYWs7XG5cdH1cblx0bnVtRmllbGQudmFsdWUgPSBcIlwiO1xufSk7XG5cblxuXG5cbi8vPT09PT09PT1UaGlyZFxuXG5cbmxldCBudW1ic0ZlYWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ktbnVtYnMnKTtcbmxldCBjaGVjazMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3VibWl0LW51bWJzJyk7XG5cbmNoZWNrMy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXHQvLyBlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0bGV0IG51bSA9IG51bWJzRmVhbGQudmFsdWU7XG5cblx0aWYgKG51bS5sZW5ndGggPiAzIHx8IG51bS5sZW5ndGggPCAzKSB7XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gJ9CS0LLQtdC00LjRgtC1INGC0YDQtdGFINC30L3QsNGH0L3QvtC1INGH0LjRgdC70L4nO1xuXHR9IGVsc2UgaWYgKG51bVswXSA9PT0gbnVtWzJdIHx8IG51bVswXSA9PT0gbnVtWzFdIHx8IG51bVsxXSA9PT0gbnVtWzJdKSB7XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gJ9CV0YHRgtGMINC+0LTQuNC90LDQutC+0LLRi9C1INGH0LjRgdC70LAnO1xuXHR9XG5cdGVsc2Uge1xuXHRcdHJlc3VsdC50ZXh0Q29udGVudCA9ICfQntC00LjQvdCw0LrQvtCy0YvRhSDRh9C40YHQtdC7INC90LXRgic7XG5cdH1cbn0pO1xuXG5cblxuXG4vLyA9PT09PT09PT09PT09RmlmdGhcblxuXG5sZXQgeWVhckZlYWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2kteWVhcicpO1xubGV0IGNoZWNrNCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQteWVhcicpO1xuXG5jaGVjazQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdGxldCB5ZWFyID0gK3llYXJGZWFsZC52YWx1ZTtcblx0aWYgKHllYXIgJSA0MDAgPT0gMCB8fCB5ZWFyICUgNCA9PSAwICYmIHllYXIgJSAxMDAgIT09IDApIHtcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSAn0JPQvtC0INCy0YvRgdC+0LrQvtGB0L3Ri9C5Jztcblx0fVxuXHRlbHNlIHtcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSAn0JPQvtC0INCd0LUg0LLRi9GB0L7QutC+0YHQvdGL0LknO1xuXHR9XG59KTtcblxuXG5cblxuLy8gPT09PT09PT09PT09NlxuXG5cbmxldCBwYWxpbmRyb21GZWFsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpLXBhbGluZHJvbScpO1xubGV0IGNoZWNrNSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQtcGFsaW5kcm9tJyk7XG5cbmNoZWNrNS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblx0bGV0IHBhbGluZHJvbSA9IHBhbGluZHJvbUZlYWxkLnZhbHVlO1xuXHRsZXQgcmV2ZXJzZSA9IHBhbGluZHJvbS5zcGxpdCgnJykucmV2ZXJzZSgpLmpvaW4oJycpO1xuXG5cdGlmIChwYWxpbmRyb20gPT0gcmV2ZXJzZSAmJiBwYWxpbmRyb20ubGVuZ3RoID09IDUpIHtcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSAn0KfQuNGB0LvQviDQv9Cw0LvQuNC90LTRgNC+0LwnO1xuXHR9IGVsc2UgaWYocGFsaW5kcm9tICE9IHJldmVyc2UgJiYgcGFsaW5kcm9tLmxlbmd0aCA9PSA1KXtcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSAn0KfQuNGB0LvQviDQvdC1INC/0LDQu9C40L3QtNGA0L7QvCc7XG5cdH1cblx0ZWxzZSB7XG5cdFx0cmVzdWx0LnRleHRDb250ZW50ID0gJ9CS0Ysg0LLQstC10LvQuCDQvdC1INCy0LXRgNC90L7QtSDRh9C40YHQu9C+Jztcblx0fVxufSk7XG5cblxuXG5cblxuXG4vLyAgPT09PT09PT09PT09PSA3XG5cblxubGV0IG1vbmV5RmVhbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaS1tb25leScpO1xubGV0IGNvbnZlcnRFdXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3VibWl0LWV1cicpO1xubGV0IGNvbnZlcnRVYW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3VibWl0LXVhbicpO1xubGV0IGNvbnZlcnRBem4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3VibWl0LWF6bicpO1xuXG5jb252ZXJ0RXVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gIGxldCBldXIgPSBtb25leUZlYWxkLnZhbHVlICogMC45MztcblxuICByZXN1bHQudGV4dENvbnRlbnQgPSBldXIgKyAnIEVVUic7XG59KTtcblxuY29udmVydFVhbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICBsZXQgdWFuID0gbW9uZXlGZWFsZC52YWx1ZSAqIDI0LjUwO1xuXG4gIHJlc3VsdC50ZXh0Q29udGVudCA9IHVhbiArICcgVUFOJztcbn0pO1xuXG5jb252ZXJ0QXpuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gIGxldCBhem4gPSBtb25leUZlYWxkLnZhbHVlICogMS43O1xuXG4gIHJlc3VsdC50ZXh0Q29udGVudCA9IGF6biArICcgQVpOJztcbn0pO1xuXG5cblxuXG4vLyAgPT09PT09PT09PT09PSA4XG5cblxubGV0IHN1bW1GZWFsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpLW1vbmV5Jyk7XG5sZXQgY2FsY3VsYXRlZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQtbW9uZXknKTtcblxuY2FsY3VsYXRlZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXHRsZXQgZGlzY291bnQgPSBzdW1tRmVhbGQudmFsdWU7XG5cblx0aWYgKGRpc2NvdW50IDwgMjAwKSB7XG5cdFx0cmVzdWx0LnRleHRDY29udGVudCA9IGRpc2NvdW50O1xuXHR9IGVsc2UgaWYgKGRpc2NvdW50ID49IDIwMCAmJiBkaXNjb3VudCA8IDMwMCkge1xuXHRcdHJlc3VsdC50ZXh0Q29udGVudCA9IGRpc2NvdW50IC0gKGRpc2NvdW50ICogMyAvIDEwMCk7XG5cdH0gZWxzZSBpZiAoZGlzY291bnQgPj0zMDAgJiYgZGlzY291bnQgPCA1MDApIHtcblx0XHRyZXN1bHQudGV4dENvbnRlbnQgPSBkaXNjb3VudCAtIChkaXNjb3VudCAqIDUgLyAxMDApO1xuXHR9XG59KTsiXSwicHJlRXhpc3RpbmdDb21tZW50IjoiLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW01dlpHVmZiVzlrZFd4bGN5OWljbTkzYzJWeUxYQmhZMnN2WDNCeVpXeDFaR1V1YW5NaUxDSndjbTlxWldOMGN5OHlNMTlrWVhSaExYUjVjR1Z6TDNOeVl5OXFjeTloY0hBdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3T3p0QlEwRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlNVRTdRVUZKUVN4SlFVRkpMRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQlZDeERRVUYxUWl4UlFVRjJRaXhEUVVGbU8wRkJRMEVzU1VGQlNTeExRVUZMTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVZRc1EwRkJkVUlzWVVGQmRrSXNRMEZCV2p0QlFVTkJMRWxCUVVrc1RVRkJUU3hIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZVTEVOQlFYVkNMRkZCUVhaQ0xFTkJRV0k3UVVGRlFTeExRVUZMTEVOQlFVTXNaMEpCUVU0c1EwRkJkMElzVDBGQmVFSXNSVUZCYVVNc1dVRkJWenRCUVVVelF6dEJRVU5ETEUxQlFVa3NSMEZCUnl4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExFdEJRWEJDT3p0QlFVVkRMRTFCUVVrc1IwRkJSeXhKUVVGSkxFVkJRVkFzU1VGQllTeEhRVUZITEVkQlFVY3NRMEZCZGtJc1JVRkJNRUk3UVVGRGVFSXNTVUZCUVN4TlFVRk5MRU5CUVVNc1YwRkJVQ3hIUVVGeFFpeFpRVUZ5UWp0QlFVTkVMRWRCUmtRc1RVRkZUeXhKUVVGSkxFZEJRVWNzU1VGQlNTeEZRVUZZTEVWQlFXVTdRVUZEY0VJc1NVRkJRU3hOUVVGTkxFTkJRVU1zVjBGQlVDeEhRVUZ4UWl4alFVRnlRanRCUVVORUxFZEJSazBzVFVGRlFTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RlFVRllMRVZCUVdVN1FVRkRjRUlzU1VGQlFTeE5RVUZOTEVOQlFVTXNWMEZCVUN4SFFVRnhRaXhoUVVGeVFqdEJRVU5FTEVkQlJrMHNUVUZGUVN4SlFVRkpMRWRCUVVjc1NVRkJTU3hGUVVGUUxFbEJRV0VzUjBGQlJ5eEhRVUZITEVkQlFYWkNMRVZCUVRSQ08wRkJRMnBETEVsQlFVRXNUVUZCVFN4RFFVRkRMRmRCUVZBc1IwRkJjVUlzWTBGQmNrSTdRVUZEUkN4SFFVWk5MRTFCUlVFN1FVRkRUQ3hKUVVGQkxFMUJRVTBzUTBGQlF5eFhRVUZRTEVkQlFYRkNMSEZEUVVGeVFqdEJRVU5FTzBGQlEwWXNRMEZvUWtZc1JTeERRVzlDUVRzN1FVRkhRU3hKUVVGSkxGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCVkN4RFFVRjFRaXhUUVVGMlFpeERRVUZtTzBGQlEwRXNTVUZCU1N4TlFVRk5MRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRVlFzUTBGQmRVSXNZMEZCZGtJc1EwRkJZanRCUVVWQkxFMUJRVTBzUTBGQlF5eG5Ra0ZCVUN4RFFVRjNRaXhQUVVGNFFpeEZRVUZwUXl4WlFVRlhPMEZCUlRORE8wRkJRME1zVFVGQlNTeEhRVUZITEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1MwRkJjRUk3TzBGQlJVWXNWVUZCVVN4SFFVRlNPMEZCUTBNc1UwRkJTeXhEUVVGTU8wRkJRME1zVFVGQlFTeE5RVUZOTEVOQlFVTXNWMEZCVUN4SFFVRnhRaXcwUWtGQmNrSTdRVUZEUVRzN1FVRkRSQ3hUUVVGTExFTkJRVXc3UVVGRFF5eE5RVUZCTEUxQlFVMHNRMEZCUXl4WFFVRlFMRWRCUVhGQ0xEUkNRVUZ5UWp0QlFVTkJPenRCUVVORUxGTkJRVXNzUTBGQlREdEJRVU5ETEUxQlFVRXNUVUZCVFN4RFFVRkRMRmRCUVZBc1IwRkJjVUlzTkVKQlFYSkNPMEZCUTBFN08wRkJRMFFzVTBGQlN5eERRVUZNTzBGQlEwTXNUVUZCUVN4TlFVRk5MRU5CUVVNc1YwRkJVQ3hIUVVGeFFpdzBRa0ZCY2tJN1FVRkRRVHM3UVVGRFJDeFRRVUZMTEVOQlFVdzdRVUZEUXl4TlFVRkJMRTFCUVUwc1EwRkJReXhYUVVGUUxFZEJRWEZDTERSQ1FVRnlRanRCUVVOQk96dEJRVU5FTEZOQlFVc3NRMEZCVER0QlFVTkRMRTFCUVVFc1RVRkJUU3hEUVVGRExGZEJRVkFzUjBGQmNVSXNORUpCUVhKQ08wRkJRMEU3TzBGQlEwUXNVMEZCU3l4RFFVRk1PMEZCUTBNc1RVRkJRU3hOUVVGTkxFTkJRVU1zVjBGQlVDeEhRVUZ4UWl3MFFrRkJja0k3UVVGRFFUczdRVUZEUkN4VFFVRkxMRU5CUVV3N1FVRkRReXhOUVVGQkxFMUJRVTBzUTBGQlF5eFhRVUZRTEVkQlFYRkNMRFJDUVVGeVFqdEJRVU5CT3p0QlFVTkVMRk5CUVVzc1EwRkJURHRCUVVORExFMUJRVUVzVFVGQlRTeERRVUZETEZkQlFWQXNSMEZCY1VJc05FSkJRWEpDTzBGQlEwRTdPMEZCUTBRc1UwRkJTeXhEUVVGTU8wRkJRME1zVFVGQlFTeE5RVUZOTEVOQlFVTXNWMEZCVUN4SFFVRnhRaXcwUWtGQmNrSTdRVUZEUVRzN1FVRkRSRHRCUVVORExFMUJRVUVzVFVGQlRTeERRVUZETEZkQlFWQXNSMEZCY1VJc2JVSkJRWEpDTzBGQlEwUTdRVUZxUTBRN08wRkJiVU5ETEVWQlFVRXNVVUZCVVN4RFFVRkRMRXRCUVZRc1IwRkJhVUlzUlVGQmFrSTdRVUZEUVN4RFFYcERSQ3hGTEVOQk9FTkJPenRCUVVkQkxFbEJRVWtzVlVGQlZTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xGVkJRWFpDTEVOQlFXcENPMEZCUTBFc1NVRkJTU3hOUVVGTkxFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFWUXNRMEZCZFVJc1pVRkJka0lzUTBGQllqdEJRVVZCTEUxQlFVMHNRMEZCUXl4blFrRkJVQ3hEUVVGM1FpeFBRVUY0UWl4RlFVRnBReXhaUVVGWE8wRkJRek5ETzBGQlEwTXNUVUZCU1N4SFFVRkhMRWRCUVVjc1ZVRkJWU3hEUVVGRExFdEJRWEpDT3p0QlFVVkVMRTFCUVVrc1IwRkJSeXhEUVVGRExFMUJRVW9zUjBGQllTeERRVUZpTEVsQlFXdENMRWRCUVVjc1EwRkJReXhOUVVGS0xFZEJRV0VzUTBGQmJrTXNSVUZCYzBNN1FVRkRja01zU1VGQlFTeE5RVUZOTEVOQlFVTXNWMEZCVUN4SFFVRnhRaXcwUWtGQmNrSTdRVUZEUVN4SFFVWkVMRTFCUlU4c1NVRkJTU3hIUVVGSExFTkJRVU1zUTBGQlJDeERRVUZJTEV0QlFWY3NSMEZCUnl4RFFVRkRMRU5CUVVRc1EwRkJaQ3hKUVVGeFFpeEhRVUZITEVOQlFVTXNRMEZCUkN4RFFVRklMRXRCUVZjc1IwRkJSeXhEUVVGRExFTkJRVVFzUTBGQmJrTXNTVUZCTUVNc1IwRkJSeXhEUVVGRExFTkJRVVFzUTBGQlNDeExRVUZYTEVkQlFVY3NRMEZCUXl4RFFVRkVMRU5CUVRWRUxFVkJRV2xGTzBGQlEzWkZMRWxCUVVFc1RVRkJUU3hEUVVGRExGZEJRVkFzUjBGQmNVSXNkVUpCUVhKQ08wRkJRMEVzUjBGR1RTeE5RVWRHTzBGQlEwb3NTVUZCUVN4TlFVRk5MRU5CUVVNc1YwRkJVQ3hIUVVGeFFpeHpRa0ZCY2tJN1FVRkRRVHRCUVVORUxFTkJXa1FzUlN4RFFXbENRVHM3UVVGSFFTeEpRVUZKTEZOQlFWTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJWQ3hEUVVGMVFpeFRRVUYyUWl4RFFVRm9RanRCUVVOQkxFbEJRVWtzVFVGQlRTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xHTkJRWFpDTEVOQlFXSTdRVUZGUVN4TlFVRk5MRU5CUVVNc1owSkJRVkFzUTBGQmQwSXNUMEZCZUVJc1JVRkJhVU1zV1VGQlRUdEJRVU4wUXl4TlFVRkpMRWxCUVVrc1IwRkJSeXhEUVVGRExGTkJRVk1zUTBGQlF5eExRVUYwUWpzN1FVRkRRU3hOUVVGSkxFbEJRVWtzUjBGQlJ5eEhRVUZRTEVsQlFXTXNRMEZCWkN4SlFVRnRRaXhKUVVGSkxFZEJRVWNzUTBGQlVDeEpRVUZaTEVOQlFWb3NTVUZCYVVJc1NVRkJTU3hIUVVGSExFZEJRVkFzUzBGQlpTeERRVUYyUkN4RlFVRXdSRHRCUVVONlJDeEpRVUZCTEUxQlFVMHNRMEZCUXl4WFFVRlFMRWRCUVhGQ0xHZENRVUZ5UWp0QlFVTkJMRWRCUmtRc1RVRkhTenRCUVVOS0xFbEJRVUVzVFVGQlRTeERRVUZETEZkQlFWQXNSMEZCY1VJc2JVSkJRWEpDTzBGQlEwRTdRVUZEUkN4RFFWSkVMRVVzUTBGaFFUczdRVUZIUVN4SlFVRkpMR05CUVdNc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQlZDeERRVUYxUWl4alFVRjJRaXhEUVVGeVFqdEJRVU5CTEVsQlFVa3NUVUZCVFN4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGVUxFTkJRWFZDTEcxQ1FVRjJRaXhEUVVGaU8wRkJSVUVzVFVGQlRTeERRVUZETEdkQ1FVRlFMRU5CUVhkQ0xFOUJRWGhDTEVWQlFXbERMRmxCUVUwN1FVRkRkRU1zVFVGQlNTeFRRVUZUTEVkQlFVY3NZMEZCWXl4RFFVRkRMRXRCUVM5Q08wRkJRMEVzVFVGQlNTeFBRVUZQTEVkQlFVY3NVMEZCVXl4RFFVRkRMRXRCUVZZc1EwRkJaMElzUlVGQmFFSXNSVUZCYjBJc1QwRkJjRUlzUjBGQk9FSXNTVUZCT1VJc1EwRkJiVU1zUlVGQmJrTXNRMEZCWkRzN1FVRkZRU3hOUVVGSkxGTkJRVk1zU1VGQlNTeFBRVUZpTEVsQlFYZENMRk5CUVZNc1EwRkJReXhOUVVGV0xFbEJRVzlDTEVOQlFXaEVMRVZCUVcxRU8wRkJRMnhFTEVsQlFVRXNUVUZCVFN4RFFVRkRMRmRCUVZBc1IwRkJjVUlzYVVKQlFYSkNPMEZCUTBFc1IwRkdSQ3hOUVVWUExFbEJRVWNzVTBGQlV5eEpRVUZKTEU5QlFXSXNTVUZCZDBJc1UwRkJVeXhEUVVGRExFMUJRVllzU1VGQmIwSXNRMEZCTDBNc1JVRkJhVVE3UVVGRGRrUXNTVUZCUVN4TlFVRk5MRU5CUVVNc1YwRkJVQ3hIUVVGeFFpeHZRa0ZCY2tJN1FVRkRRU3hIUVVaTkxFMUJSMFk3UVVGRFNpeEpRVUZCTEUxQlFVMHNRMEZCUXl4WFFVRlFMRWRCUVhGQ0xEQkNRVUZ5UWp0QlFVTkJPMEZCUTBRc1EwRmFSQ3hGTEVOQmJVSkJPenRCUVVkQkxFbEJRVWtzVlVGQlZTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xGVkJRWFpDTEVOQlFXcENPMEZCUTBFc1NVRkJTU3hWUVVGVkxFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFWUXNRMEZCZFVJc1lVRkJka0lzUTBGQmFrSTdRVUZEUVN4SlFVRkpMRlZCUVZVc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQlZDeERRVUYxUWl4aFFVRjJRaXhEUVVGcVFqdEJRVU5CTEVsQlFVa3NWVUZCVlN4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGVUxFTkJRWFZDTEdGQlFYWkNMRU5CUVdwQ08wRkJSVUVzVlVGQlZTeERRVUZETEdkQ1FVRllMRU5CUVRSQ0xFOUJRVFZDTEVWQlFYRkRMRmxCUVZjN1FVRkRPVU1zVFVGQlNTeEhRVUZITEVkQlFVY3NWVUZCVlN4RFFVRkRMRXRCUVZnc1IwRkJiVUlzU1VGQk4wSTdRVUZGUVN4RlFVRkJMRTFCUVUwc1EwRkJReXhYUVVGUUxFZEJRWEZDTEVkQlFVY3NSMEZCUnl4TlFVRXpRanRCUVVORUxFTkJTa1E3UVVGTlFTeFZRVUZWTEVOQlFVTXNaMEpCUVZnc1EwRkJORUlzVDBGQk5VSXNSVUZCY1VNc1dVRkJWenRCUVVNNVF5eE5RVUZKTEVkQlFVY3NSMEZCUnl4VlFVRlZMRU5CUVVNc1MwRkJXQ3hIUVVGdFFpeExRVUUzUWp0QlFVVkJMRVZCUVVFc1RVRkJUU3hEUVVGRExGZEJRVkFzUjBGQmNVSXNSMEZCUnl4SFFVRkhMRTFCUVROQ08wRkJRMFFzUTBGS1JEdEJRVTFCTEZWQlFWVXNRMEZCUXl4blFrRkJXQ3hEUVVFMFFpeFBRVUUxUWl4RlFVRnhReXhaUVVGWE8wRkJRemxETEUxQlFVa3NSMEZCUnl4SFFVRkhMRlZCUVZVc1EwRkJReXhMUVVGWUxFZEJRVzFDTEVkQlFUZENPMEZCUlVFc1JVRkJRU3hOUVVGTkxFTkJRVU1zVjBGQlVDeEhRVUZ4UWl4SFFVRkhMRWRCUVVjc1RVRkJNMEk3UVVGRFJDeERRVXBFTEVVc1EwRlRRVHM3UVVGSFFTeEpRVUZKTEZOQlFWTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJWQ3hEUVVGMVFpeFZRVUYyUWl4RFFVRm9RanRCUVVOQkxFbEJRVWtzVlVGQlZTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xHVkJRWFpDTEVOQlFXcENPMEZCUlVFc1ZVRkJWU3hEUVVGRExHZENRVUZZTEVOQlFUUkNMRTlCUVRWQ0xFVkJRWEZETEZsQlFWYzdRVUZETDBNc1RVRkJTU3hSUVVGUkxFZEJRVWNzVTBGQlV5eERRVUZETEV0QlFYcENPenRCUVVWQkxFMUJRVWtzVVVGQlVTeEhRVUZITEVkQlFXWXNSVUZCYjBJN1FVRkRia0lzU1VGQlFTeE5RVUZOTEVOQlFVTXNXVUZCVUN4SFFVRnpRaXhSUVVGMFFqdEJRVU5CTEVkQlJrUXNUVUZGVHl4SlFVRkpMRkZCUVZFc1NVRkJTU3hIUVVGYUxFbEJRVzFDTEZGQlFWRXNSMEZCUnl4SFFVRnNReXhGUVVGMVF6dEJRVU0zUXl4SlFVRkJMRTFCUVUwc1EwRkJReXhYUVVGUUxFZEJRWEZDTEZGQlFWRXNSMEZCU1N4UlFVRlJMRWRCUVVjc1EwRkJXQ3hIUVVGbExFZEJRV2hFTzBGQlEwRXNSMEZHVFN4TlFVVkJMRWxCUVVrc1VVRkJVU3hKUVVGSExFZEJRVmdzU1VGQmEwSXNVVUZCVVN4SFFVRkhMRWRCUVdwRExFVkJRWE5ETzBGQlF6VkRMRWxCUVVFc1RVRkJUU3hEUVVGRExGZEJRVkFzUjBGQmNVSXNVVUZCVVN4SFFVRkpMRkZCUVZFc1IwRkJSeXhEUVVGWUxFZEJRV1VzUjBGQmFFUTdRVUZEUVR0QlFVTkVMRU5CVmtRaUxDSm1hV3hsSWpvaVoyVnVaWEpoZEdWa0xtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaWhtZFc1amRHbHZiaWdwZTJaMWJtTjBhVzl1SUhJb1pTeHVMSFFwZTJaMWJtTjBhVzl1SUc4b2FTeG1LWHRwWmlnaGJsdHBYU2w3YVdZb0lXVmJhVjBwZTNaaGNpQmpQVndpWm5WdVkzUnBiMjVjSWowOWRIbHdaVzltSUhKbGNYVnBjbVVtSm5KbGNYVnBjbVU3YVdZb0lXWW1KbU1wY21WMGRYSnVJR01vYVN3aE1DazdhV1lvZFNseVpYUjFjbTRnZFNocExDRXdLVHQyWVhJZ1lUMXVaWGNnUlhKeWIzSW9YQ0pEWVc1dWIzUWdabWx1WkNCdGIyUjFiR1VnSjF3aUsya3JYQ0luWENJcE8zUm9jbTkzSUdFdVkyOWtaVDFjSWsxUFJGVk1SVjlPVDFSZlJrOVZUa1JjSWl4aGZYWmhjaUJ3UFc1YmFWMDllMlY0Y0c5eWRITTZlMzE5TzJWYmFWMWJNRjB1WTJGc2JDaHdMbVY0Y0c5eWRITXNablZ1WTNScGIyNG9jaWw3ZG1GeUlHNDlaVnRwWFZzeFhWdHlYVHR5WlhSMWNtNGdieWh1Zkh4eUtYMHNjQ3h3TG1WNGNHOXlkSE1zY2l4bExHNHNkQ2w5Y21WMGRYSnVJRzViYVYwdVpYaHdiM0owYzMxbWIzSW9kbUZ5SUhVOVhDSm1kVzVqZEdsdmJsd2lQVDEwZVhCbGIyWWdjbVZ4ZFdseVpTWW1jbVZ4ZFdseVpTeHBQVEE3YVR4MExteGxibWQwYUR0cEt5c3BieWgwVzJsZEtUdHlaWFIxY200Z2IzMXlaWFIxY200Z2NuMHBLQ2tpTENJdkx5QnNaWFFnWVdkbElEMGdjSEp2YlhCMElDaGNJa2h2ZHlCdmJHUWdZWEpsSUhsdmRUOWNJaWs3WEc0dkx5QnNaWFFnYldWemMyRm5aU0E5SUNoaFoyVThQVEV4S1NBL0lGd2lRbUZpZVZ3aU9pQXZMOUdBMExYUXNkQzEwTDNRdnRDNlhHNHZMeUJjZENoaFoyVThQVEUzS1NBL0lGd2lWR1ZsYm1GblpYSmNJam9nTHkvUXY5QyswTFRSZ05DKzBZSFJndEMrMExwY2JpOHZJRngwS0dGblpUdzlOVGtwSUQ4Z1hDSkJaSFZzZEZ3aU9pQXZMOUN5MExmUmdOQyswWUhRdTlHTDBMbGNiaTh2SUZ4MEtHRm5aVDQ5TmpBcElEOGdYQ0pTWlhScGNtVmxYQ0k2WEc0dkx5QmNJbGx2ZFNCbGJuUmxjbVZrSUhSb1pTQjNjbTl1WnlCaFoyVmNJanRjYmk4dklHRnNaWEowSUNodFpYTnpZV2RsS1R0Y2JseHVYRzVjYmk4dlBUMDlQVDFHYVhKemRGeHVYRzVjYmx4dWJHVjBJR0ZuWlVacFpXeGtJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25JMmt0WVdkbEp5azdYRzVzWlhRZ1kyaGxZMnNnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2NqYzNWaWJXbDBMV0ZuWlNjcE8xeHViR1YwSUhKbGMzVnNkQ0E5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeU4wYVhSc1pTY3BPMXh1WEc1amFHVmpheTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlJQ2duWTJ4cFkyc25MQ0JtZFc1amRHbHZiaWdwSUh0Y2JseHVYSFF2THlCbExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNWNkRngwYkdWMElHRm5aU0E5SUN0aFoyVkdhV1ZzWkM1MllXeDFaVHRjYmx4dUlDQWdhV1lnS0dGblpTQThQU0F4TVNBbUppQmhaMlVnUGlBd0tTQjdYRzRnSUNBZ1hIUnlaWE4xYkhRdWRHVjRkRU52Ym5SbGJuUWdQU0FuMEpMUml5RFJnTkMxMExIUXRkQzkwTDdRdWljN1hHNGdJQ0I5SUdWc2MyVWdhV1lnS0dGblpTQThQU0F4TnlrZ2UxeHVJQ0FnSUZ4MGNtVnpkV3gwTG5SbGVIUkRiMjUwWlc1MElEMGdKOUNTMFlzZzBML1F2dEMwMFlEUXZ0R0IwWUxRdnRDNkp6dGNiaUFnSUgwZ1pXeHpaU0JwWmlBb1lXZGxJRHc5SURVNUtTQjdYRzRnSUNBZ1hIUnlaWE4xYkhRdWRHVjRkRU52Ym5SbGJuUWdQU0FuMEpMUml5RFFzdEMzMFlEUXZ0R0IwTHZSaTlDNUp6dGNiaUFnSUgwZ1pXeHpaU0JwWmlBb1lXZGxJRDQ5SURZd0lDWW1JR0ZuWlNBOElERXlNQ2tnZTF4dUlDQWdYSFJjZEhKbGMzVnNkQzUwWlhoMFEyOXVkR1Z1ZENBOUlDZlFrdEdMSU5DLzBMWFF2ZEdCMExqUXZ0QzkwTFhSZ0NjN1hHNGdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lGeDBjbVZ6ZFd4MExuUmxlSFJEYjI1MFpXNTBJRDBnSjlDUzBZc3NJTkM5MExEUXN0QzEwWURRdmRDKzBMVXNJTkN5MExMUXRkQzcwTGdnMEwzUXRTRFFzdEMxMFlEUXZkQyswTFVnMFlmUXVOR0IwTHZRdmljN1hHNGdJQ0I5WEc0Z2ZTazdYRzVjYmx4dVhHNHZMejA5UFQwOVUyVmpiMjVrWEc1Y2JseHViR1YwSUc1MWJVWnBaV3hrSUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduSTJrdGJuVnRZaWNwTzF4dWJHVjBJR05vWldOck1pQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5TnpkV0p0YVhRdGJuVnRZaWNwTzF4dVhHNWphR1ZqYXpJdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblkyeHBZMnNuTENCbWRXNWpkR2x2YmlncElIdGNibHh1WEhRdkx5QmxMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYRzVjZEZ4MGJHVjBJRzUxYlNBOUlDdHVkVzFHYVdWc1pDNTJZV3gxWlR0Y2JseHVjM2RwZEdOb0lDaHVkVzBwSUh0Y2JseDBZMkZ6WlNBd09seHVYSFJjZEhKbGMzVnNkQzUwWlhoMFEyOXVkR1Z1ZENBOUlGd2kwS0hRdjlDMTBZWWcwWUhRdU5DODBMTFF2dEM3SU5HTjBZTFF2dEM1SU5DNjBMM1F2dEMvMExyUXVEb2dLVndpTzF4dVhIUmNkR0p5WldGck8xeHVYSFJqWVhObElERTZYRzVjZEZ4MGNtVnpkV3gwTG5SbGVIUkRiMjUwWlc1MElEMGdYQ0xRb2RDLzBMWFJoaURSZ2RDNDBMelFzdEMrMExzZzBZM1JndEMrMExrZzBMclF2ZEMrMEwvUXV0QzRPaUFoWENJN1hHNWNkRngwWW5KbFlXczdYRzVjZEdOaGMyVWdNanBjYmx4MFhIUnlaWE4xYkhRdWRHVjRkRU52Ym5SbGJuUWdQU0JjSXRDaDBML1F0ZEdHSU5HQjBMalF2TkN5MEw3UXV5RFJqZEdDMEw3UXVTRFF1dEM5MEw3UXY5QzYwTGc2SUVCY0lqdGNibHgwWEhSaWNtVmhhenRjYmx4MFkyRnpaU0F6T2x4dVhIUmNkSEpsYzNWc2RDNTBaWGgwUTI5dWRHVnVkQ0E5SUZ3aTBLSFF2OUMxMFlZZzBZSFF1TkM4MExMUXZ0QzdJTkdOMFlMUXZ0QzVJTkM2MEwzUXZ0Qy8wTHJRdURvZ0kxd2lPMXh1WEhSY2RHSnlaV0ZyTzF4dVhIUmpZWE5sSURRNlhHNWNkRngwY21WemRXeDBMblJsZUhSRGIyNTBaVzUwSUQwZ1hDTFFvZEMvMExYUmhpRFJnZEM0MEx6UXN0QyswTHNnMFkzUmd0QyswTGtnMExyUXZkQyswTC9RdXRDNE9pQWtYQ0k3WEc1Y2RGeDBZbkpsWVdzN1hHNWNkR05oYzJVZ05UcGNibHgwWEhSeVpYTjFiSFF1ZEdWNGRFTnZiblJsYm5RZ1BTQmNJdENoMEwvUXRkR0dJTkdCMExqUXZOQ3kwTDdRdXlEUmpkR0MwTDdRdVNEUXV0QzkwTDdRdjlDNjBMZzZJQ1ZjSWp0Y2JseDBYSFJpY21WaGF6dGNibHgwWTJGelpTQTJPbHh1WEhSY2RISmxjM1ZzZEM1MFpYaDBRMjl1ZEdWdWRDQTlJRndpMEtIUXY5QzEwWVlnMFlIUXVOQzgwTExRdnRDN0lOR04wWUxRdnRDNUlOQzYwTDNRdnRDLzBMclF1RG9nWGx3aU8xeHVYSFJjZEdKeVpXRnJPMXh1WEhSallYTmxJRGM2WEc1Y2RGeDBjbVZ6ZFd4MExuUmxlSFJEYjI1MFpXNTBJRDBnWENMUW9kQy8wTFhSaGlEUmdkQzQwTHpRc3RDKzBMc2cwWTNSZ3RDKzBMa2cwTHJRdmRDKzBML1F1dEM0T2lBbVhDSTdYRzVjZEZ4MFluSmxZV3M3WEc1Y2RHTmhjMlVnT0RwY2JseDBYSFJ5WlhOMWJIUXVkR1Y0ZEVOdmJuUmxiblFnUFNCY0l0Q2gwTC9RdGRHR0lOR0IwTGpRdk5DeTBMN1F1eURSamRHQzBMN1F1U0RRdXRDOTBMN1F2OUM2MExnNklDcGNJanRjYmx4MFhIUmljbVZoYXp0Y2JseDBZMkZ6WlNBNU9seHVYSFJjZEhKbGMzVnNkQzUwWlhoMFEyOXVkR1Z1ZENBOUlGd2kwS0hRdjlDMTBZWWcwWUhRdU5DODBMTFF2dEM3SU5HTjBZTFF2dEM1SU5DNjBMM1F2dEMvMExyUXVEb2dLRndpTzF4dVhIUmNkR0p5WldGck8xeHVYSFJrWldaaGRXeDBPbHh1WEhSY2RISmxjM1ZzZEM1MFpYaDBRMjl1ZEdWdWRDQTlJRndpMEozUXRTRFFzdEMxMFlEUXZkR0wwTFVnMFlIUXVOQzgwTExRdnRDN0lWd2lYRzVjZEdKeVpXRnJPMXh1WEhSOVhHNWNkRzUxYlVacFpXeGtMblpoYkhWbElEMGdYQ0pjSWp0Y2JuMHBPMXh1WEc1Y2JseHVYRzR2THowOVBUMDlQVDA5VkdocGNtUmNibHh1WEc1c1pYUWdiblZ0WW5OR1pXRnNaQ0E5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeU5wTFc1MWJXSnpKeWs3WEc1c1pYUWdZMmhsWTJzeklEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkkzTjFZbTFwZEMxdWRXMWljeWNwTzF4dVhHNWphR1ZqYXpNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblkyeHBZMnNuTENCbWRXNWpkR2x2YmlncElIdGNibHgwTHk4Z1pTNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVYSFJjZEd4bGRDQnVkVzBnUFNCdWRXMWljMFpsWVd4a0xuWmhiSFZsTzF4dVhHNWNkR2xtSUNodWRXMHViR1Z1WjNSb0lENGdNeUI4ZkNCdWRXMHViR1Z1WjNSb0lEd2dNeWtnZTF4dVhIUmNkSEpsYzNWc2RDNTBaWGgwUTI5dWRHVnVkQ0E5SUNmUWt0Q3kwTFhRdE5DNDBZTFF0U0RSZ3RHQTBMWFJoU0RRdDlDOTBMRFJoOUM5MEw3UXRTRFJoOUM0MFlIUXU5QytKenRjYmx4MGZTQmxiSE5sSUdsbUlDaHVkVzFiTUYwZ1BUMDlJRzUxYlZzeVhTQjhmQ0J1ZFcxYk1GMGdQVDA5SUc1MWJWc3hYU0I4ZkNCdWRXMWJNVjBnUFQwOUlHNTFiVnN5WFNrZ2UxeHVYSFJjZEhKbGMzVnNkQzUwWlhoMFEyOXVkR1Z1ZENBOUlDZlFsZEdCMFlMUmpDRFF2dEMwMExqUXZkQ3cwTHJRdnRDeTBZdlF0U0RSaDlDNDBZSFF1OUN3Snp0Y2JseDBmVnh1WEhSbGJITmxJSHRjYmx4MFhIUnlaWE4xYkhRdWRHVjRkRU52Ym5SbGJuUWdQU0FuMEo3UXROQzQwTDNRc05DNjBMN1FzdEdMMFlVZzBZZlF1TkdCMExYUXV5RFF2ZEMxMFlJbk8xeHVYSFI5WEc1OUtUdGNibHh1WEc1Y2JseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBVWnBablJvWEc1Y2JseHViR1YwSUhsbFlYSkdaV0ZzWkNBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSnlOcExYbGxZWEluS1R0Y2JteGxkQ0JqYUdWamF6UWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY2pjM1ZpYldsMExYbGxZWEluS1R0Y2JseHVZMmhsWTJzMExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z0tDa2dQVDRnZTF4dVhIUnNaWFFnZVdWaGNpQTlJQ3Q1WldGeVJtVmhiR1F1ZG1Gc2RXVTdYRzVjZEdsbUlDaDVaV0Z5SUNVZ05EQXdJRDA5SURBZ2ZId2dlV1ZoY2lBbElEUWdQVDBnTUNBbUppQjVaV0Z5SUNVZ01UQXdJQ0U5UFNBd0tTQjdYRzVjZEZ4MGNtVnpkV3gwTG5SbGVIUkRiMjUwWlc1MElEMGdKOUNUMEw3UXRDRFFzdEdMMFlIUXZ0QzYwTDdSZ2RDOTBZdlF1U2M3WEc1Y2RIMWNibHgwWld4elpTQjdYRzVjZEZ4MGNtVnpkV3gwTG5SbGVIUkRiMjUwWlc1MElEMGdKOUNUMEw3UXRDRFFuZEMxSU5DeTBZdlJnZEMrMExyUXZ0R0IwTDNSaTlDNUp6dGNibHgwZlZ4dWZTazdYRzVjYmx4dVhHNWNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUWmNibHh1WEc1c1pYUWdjR0ZzYVc1a2NtOXRSbVZoYkdRZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjamFTMXdZV3hwYm1SeWIyMG5LVHRjYm14bGRDQmphR1ZqYXpVZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjamMzVmliV2wwTFhCaGJHbHVaSEp2YlNjcE8xeHVYRzVqYUdWamF6VXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25ZMnhwWTJzbkxDQW9LU0E5UGlCN1hHNWNkR3hsZENCd1lXeHBibVJ5YjIwZ1BTQndZV3hwYm1SeWIyMUdaV0ZzWkM1MllXeDFaVHRjYmx4MGJHVjBJSEpsZG1WeWMyVWdQU0J3WVd4cGJtUnliMjB1YzNCc2FYUW9KeWNwTG5KbGRtVnljMlVvS1M1cWIybHVLQ2NuS1R0Y2JseHVYSFJwWmlBb2NHRnNhVzVrY205dElEMDlJSEpsZG1WeWMyVWdKaVlnY0dGc2FXNWtjbTl0TG14bGJtZDBhQ0E5UFNBMUtTQjdYRzVjZEZ4MGNtVnpkV3gwTG5SbGVIUkRiMjUwWlc1MElEMGdKOUNuMExqUmdkQzcwTDRnMEwvUXNOQzcwTGpRdmRDMDBZRFF2dEM4Snp0Y2JseDBmU0JsYkhObElHbG1LSEJoYkdsdVpISnZiU0FoUFNCeVpYWmxjbk5sSUNZbUlIQmhiR2x1WkhKdmJTNXNaVzVuZEdnZ1BUMGdOU2w3WEc1Y2RGeDBjbVZ6ZFd4MExuUmxlSFJEYjI1MFpXNTBJRDBnSjlDbjBMalJnZEM3MEw0ZzBMM1F0U0RRdjlDdzBMdlF1TkM5MExUUmdOQyswTHduTzF4dVhIUjlYRzVjZEdWc2MyVWdlMXh1WEhSY2RISmxjM1ZzZEM1MFpYaDBRMjl1ZEdWdWRDQTlJQ2ZRa3RHTElOQ3kwTExRdGRDNzBMZ2cwTDNRdFNEUXN0QzEwWURRdmRDKzBMVWcwWWZRdU5HQjBMdlF2aWM3WEc1Y2RIMWNibjBwTzF4dVhHNWNibHh1WEc1Y2JseHVMeThnSUQwOVBUMDlQVDA5UFQwOVBUMGdOMXh1WEc1Y2JteGxkQ0J0YjI1bGVVWmxZV3hrSUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduSTJrdGJXOXVaWGtuS1R0Y2JteGxkQ0JqYjI1MlpYSjBSWFZ5SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduSTNOMVltMXBkQzFsZFhJbktUdGNibXhsZENCamIyNTJaWEowVldGdUlEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkkzTjFZbTFwZEMxMVlXNG5LVHRjYm14bGRDQmpiMjUyWlhKMFFYcHVJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25JM04xWW0xcGRDMWhlbTRuS1R0Y2JseHVZMjl1ZG1WeWRFVjFjaTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQnNaWFFnWlhWeUlEMGdiVzl1WlhsR1pXRnNaQzUyWVd4MVpTQXFJREF1T1RNN1hHNWNiaUFnY21WemRXeDBMblJsZUhSRGIyNTBaVzUwSUQwZ1pYVnlJQ3NnSnlCRlZWSW5PMXh1ZlNrN1hHNWNibU52Ym5abGNuUlZZVzR1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdiR1YwSUhWaGJpQTlJRzF2Ym1WNVJtVmhiR1F1ZG1Gc2RXVWdLaUF5TkM0MU1EdGNibHh1SUNCeVpYTjFiSFF1ZEdWNGRFTnZiblJsYm5RZ1BTQjFZVzRnS3lBbklGVkJUaWM3WEc1OUtUdGNibHh1WTI5dWRtVnlkRUY2Ymk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0JzWlhRZ1lYcHVJRDBnYlc5dVpYbEdaV0ZzWkM1MllXeDFaU0FxSURFdU56dGNibHh1SUNCeVpYTjFiSFF1ZEdWNGRFTnZiblJsYm5RZ1BTQmhlbTRnS3lBbklFRmFUaWM3WEc1OUtUdGNibHh1WEc1Y2JseHVMeThnSUQwOVBUMDlQVDA5UFQwOVBUMGdPRnh1WEc1Y2JteGxkQ0J6ZFcxdFJtVmhiR1FnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2NqYVMxdGIyNWxlU2NwTzF4dWJHVjBJR05oYkdOMWJHRjBaV1FnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2NqYzNWaWJXbDBMVzF2Ym1WNUp5azdYRzVjYm1OaGJHTjFiR0YwWldRdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblkyeHBZMnNuTENCbWRXNWpkR2x2YmlncElIdGNibHgwYkdWMElHUnBjMk52ZFc1MElEMGdjM1Z0YlVabFlXeGtMblpoYkhWbE8xeHVYRzVjZEdsbUlDaGthWE5qYjNWdWRDQThJREl3TUNrZ2UxeHVYSFJjZEhKbGMzVnNkQzUwWlhoMFEyTnZiblJsYm5RZ1BTQmthWE5qYjNWdWREdGNibHgwZlNCbGJITmxJR2xtSUNoa2FYTmpiM1Z1ZENBK1BTQXlNREFnSmlZZ1pHbHpZMjkxYm5RZ1BDQXpNREFwSUh0Y2JseDBYSFJ5WlhOMWJIUXVkR1Y0ZEVOdmJuUmxiblFnUFNCa2FYTmpiM1Z1ZENBdElDaGthWE5qYjNWdWRDQXFJRE1nTHlBeE1EQXBPMXh1WEhSOUlHVnNjMlVnYVdZZ0tHUnBjMk52ZFc1MElENDlNekF3SUNZbUlHUnBjMk52ZFc1MElEd2dOVEF3S1NCN1hHNWNkRngwY21WemRXeDBMblJsZUhSRGIyNTBaVzUwSUQwZ1pHbHpZMjkxYm5RZ0xTQW9aR2x6WTI5MWJuUWdLaUExSUM4Z01UQXdLVHRjYmx4MGZWeHVmU2s3SWwxOSJ9
