(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var name = prompt("Waht is your name?");
alert("hello" + " " + name);
var year = 2019;
var birthday = prompt("year of your birth?");
alert("you are" + " " + (year - birthday) + " " + "years old");
var lenght = prompt("what is the length of the side of the square?");
var perimetr = 4 * lenght;
alert("perimetr of the square is" + " " + perimetr);
var radius = prompt("what radius?");
var area = radius * radius * Math.PI;
alert("circle area is" + " " + area);
var distance = prompt("what is the distance between cities in km?");
var time = prompt("how long would you like to get? (in hour)");
var speed = distance / time;
alert("you must move at a speed of" + " " + speed + " " + "km/hr");
var dollar = prompt("enter the dollar amount");
var euro = dollar * 0.91;
alert("it's" + " " + euro + " " + "euros");
var flash = prompt("specify the amount of flash drive in GB");
var quantity = flash / 820 * 1024;
alert("you can upload" + " " + Math.floor(quantity) + " " + "files");
var money = prompt("amount of money in the wallet");
var choco = prompt("the price of chocolate");
alert("you can buy" + " " + Math.floor(money / choco) + " " + "chocolates." + " " + "Your surrender is" + " " + money % choco + "grn");
var number = prompt("enter a number");
var result = 0;

while (number) {
  result *= 10;
  result += number % 10;
  number = Math.floor(number / 10);
}

alert(result);
var contribution = prompt("your contribution");
alert("deposit payments for 2 months is" + " " + contribution * 0.05 / 12 * 2);

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
